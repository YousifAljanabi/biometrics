import cv2
import numpy as np

img = cv2.imread('examples/101_1.bmp')  # Input

# Get image dimensions
rows, cols, ch = img.shape

# Affine Warp ---
# Define 3 points in original image
pts1 = np.float32([[50,50], [200,50], [50,200]])
# Define where those points should map to
pts2 = np.float32([[10,100], [200,50], [100,250]])
# Compute affine transform matrix
M_affine = cv2.getAffineTransform(pts1, pts2)
# Apply warp
warp_affine = cv2.warpAffine(img, M_affine, (cols, rows))

# Perspective Warp ---
# Define 4 points in original image
pts1_p = np.float32([[0,0], [cols-1,0], [0,rows-1], [cols-1,rows-1]])
# Define where those points should map to
pts2_p = np.float32([[0,0], [cols-100,50], [50,rows-50], [cols-50,rows-100]])
# Compute perspective transform matrix
M_perspective = cv2.getPerspectiveTransform(pts1_p, pts2_p)
# Apply warp
warp_perspective = cv2.warpPerspective(img, M_perspective, (cols, rows))

# Display
cv2.imshow('Original', img)
cv2.imshow('Affine Warp', warp_affine)
cv2.imshow('Perspective Warp', warp_perspective)
cv2.waitKey(0)
cv2.destroyAllWindows()
